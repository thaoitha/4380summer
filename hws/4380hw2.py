# -*- coding: utf-8 -*-
"""4380HW2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bie9hHOTyzPvAQU3wxvEA5LyLrwZUVMG
"""

from tabulate import tabulate
from IPython.core.display import display, HTML

ds = [['Dataset', 'First Row Col Names?', 'Comma Separated?', 'Row #', 'Col #', 'Size'],
       ['Bank Account Closing', 'Yes', 'Yes', 165035, 14, '12MB'],
       ['Metastatic Cancer Diagnosis', 'Yes', 'Yes', 12906, 83, '11MB'],
       ['Diabetes Prediction', 'Yes', 'Yes', 601, 10, '21K'],
       ['Higgs Boson', 'Yes', 'Yes', 250001, 33, '53MB'],
       ['Marketing Response', 'Yes', 'Yes', 145232, 1936, '922MB'],
       ['Amex Default Prediction', 'Yes', 'Yes', 458913, 190, '16GB'],
       ['Santander Customer Satisfaction', 'Yes', 'Yes', 76021, 371, '57MB'],
       ['Santander Product Recommendation', 'Yes', 'Yes', 11081212, 48, '1.8GB'],
       ['Predict Student Performance from Game Play', 'Yes', 'Yes', 26296946, 20, '4.7GB'],
       ['Horse Health', 'Yes', 'Yes', 1235, 29, '229kB'],
       ['Software Defects', 'Yes', 'Yes', 101763, 23, '11MB'],
       ['Cirrihosis Outcomes', 'Yes', 'Yes', 7905, 20, '733.5kB'],
       ['Mushroom Classification', 'Yes', 'Yes', 1000, 23, '374kB']]

table = tabulate(ds, headers='firstrow', tablefmt='html')

#this is for centering the values to mak easier to read
centerval = """
<style>
    table {
        width: 100%;
        border-collapse: collapse;
        font-family: 'Arial', sans-serif;
    }
    th, td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: center;
    }
    th {
        background-color: #f2f2f2;
        font-family: 'Courier New', monospace;
    }
</style>
"""

display(HTML(centerval + table))

pip install kaggle

!mkdir -p ~/.kaggle
!mv kaggle.json ~/.kaggle/

!chmod 600 ~/.kaggle/kaggle.json
#set permissions

!kaggle competitions download -c santander-product-recommendation
!unzip santander-product-recommendation.zip

!kaggle competitions download -c playground-series-s4e1
!unzip playground-series-s4e1.zip -d playground-series-s4e1

!kaggle competitions download -c widsdatathon2024-challenge1
!unzip widsdatathon2024-challenge1.zip -d widsdatathon2024-challenge1

!kaggle competitions download -c higgs-boson
!unzip higgs-boson.zip -d higgs-boson

!kaggle competitions download -c springleaf-marketing-response
!unzip springleaf-marketing-response.zip -d springleaf-marketing-response

!kaggle competitions download -c amex-default-prediction
!unzip amex-default-prediction.zip -d amex-default-prediction

!kaggle competitions download -c santander-customer-satisfaction
!unzip santander-customer-satisfaction.zip -d santander-customer-satisfaction

!kaggle competitions download -c predict-student-performance-from-game-play
!unzip predict-student-performance-from-game-play.zip -d predict-student-performance-from-game-play

!kaggle competitions download -c playground-series-s3e22
!unzip playground-series-s3e22.zip -d playground-series-s3e22

!kaggle competitions download -c playground-series-s3e23
!unzip playground-series-s3e23.zip -d playground-series-s3e23

!kaggle competitions download -c playground-series-s3e26
!unzip playground-series-s3e26.zip -d playground-series-s3e26

!kaggle datasets download -d uciml/mushroom-classification
!unzip mushroom-classification.zip -d mushroom-classification

#diabetes must manually download, along with...

"""##1"""

ls

import os
import shutil

# Check the current directory and list all files and directories
current_directory = os.getcwd()
print(f"Current directory: {current_directory}")
print("Contents of the current directory:")
print(os.listdir(current_directory))

# Define the new directory for storing unzipped files
unzipped_dir = "Unzipped_Files"
os.makedirs(unzipped_dir, exist_ok=True)

# List of directories that are typically created by unzipping
directories = [
    "amex-default-prediction",
    "higgs-boson",
    "mushroom-classification",
    "playground-series-s3e26",
    "playground-series-s4e1",
    "predict-student-performance-from-game-play",
    "springleaf-marketing-response",
    "widsdatathon2024-challenge1",
    "santander-customer-satisfaction"
]

# Move each directory to the new unzipped directory
for dir_name in directories:
    if os.path.isdir(dir_name):
        shutil.move(dir_name, unzipped_dir)
        print(f"Moved {dir_name} to {unzipped_dir}")
    else:
        print(f"{dir_name} does not exist or is not a directory")

print("All unzipped directories have been moved.")

!unzip 'Diabetes Prediction.zip' -d 'Diabetes_Prediction'

!ls Diabetes_Prediction

import pandas as pd

file_path = '/content/cancer patient data sets.csv'
df = pd.read_csv(file_path)

print(f"Dataset contains {df.shape[0]} rows and {df.shape[1]} columns.")
df.head()

"""##2"""

import pandas as pd


file_path = 'Diabetes_Prediction/sample_submission.csv'
df = pd.read_csv(file_path)

total_rows = len(df)
part_size = total_rows // 3

df_part1 = df.iloc[:part_size]
df_part2 = df.iloc[part_size:2*part_size]
df_part3 = df.iloc[2*part_size:]

df_part1.to_csv('dp1.csv', index=False)
df_part2.to_csv('dp2.csv', index=False)
df_part3.to_csv('dp3.csv', index=False)

print(f"Total rows: {total_rows}")
print(f"Part 1 rows: {len(df_part1)}")
print(f"Part 2 rows: {len(df_part2)}")
print(f"Part 3 rows: {len(df_part3)}")

"""##3"""

import pandas as pd

ddf = pd.read_csv('Diabetes Prediction.csv')

presence_df = ddf[ddf['Presence'] == 'Presence']
absence_df = ddf[ddf['Absence'] == 'Absence']

presence_df.to_csv('presence_label.csv', index=False)
absence_df.to_csv('absence_label.csv', index=False)

"""#4"""

cdf = pd.read_csv('car_web_scraped_dataset.csv')

no_accidents = cdf[cdf['accidents'].str.contains('no accidents', case=False, na=False)]

fraction_no_accidents = len(no_accidents) / len(df)

fraction_no_accidents

"""#5"""

housedf = pd.read_csv('Housing.csv')

housedf = housedf.replace({
    'yes': 1,
    'no': 0,
    'unfurnished': 0,
    'furnished': 1,
    'semi-furnished': 2
})

housedf.to_csv('Updated_housing.csv', index=False)

"""#6"""

mall_df = pd.read_csv('Mall_Customers.csv')

#removes customer id column
mall_df = mall_df.drop(columns=['CustomerID'])

mall_df.to_csv('Mall_Customers_NoID.csv', index=False)

"""#7"""

df = pd.read_csv('Mall_Customers_NoID.csv')#not sure this the right base file

df['Sum'] = df[['Research Quality Score', 'Industry Score', 'International Outlook', 'Research Environment Score']].sum(axis=1)

df[['Sum']].to_csv('Sum_Results.csv', index=False)

"""#8"""

df = pd.read_csv('cancer patient data sets.csv')

df_sorted = df.sort_values(by='Age')

df_sorted.to_csv('cp_data_sorted.csv', index=False)